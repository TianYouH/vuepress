(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{352:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git-commit-message-和-change-log-验证配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-message-和-change-log-验证配置"}},[t._v("#")]),t._v(" Git Commit message 和 Change log 验证配置")]),t._v(" "),s("p",[t._v("使用 commitizen 保证 提交格式正确，然后使用Husky配合commitlint验证提交说明的有效性，最后可以选择性使用 conventional-changelog 生成 Change log")]),t._v(" "),s("h2",{attrs:{id:"_1-commitizen-commit-message-格式工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-commitizen-commit-message-格式工具"}},[t._v("#")]),t._v(" 1. "),s("em",[t._v("Commitizen")]),t._v(" Commit message 格式工具")]),t._v(" "),s("p",[t._v("用来生成符合格式的 Commit message。")]),t._v(" "),s("p",[t._v("首先，安装提交 cli 工具：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm install commitizen -g\n")])])]),s("p",[t._v("接下来，通过键入以下方式，初始化项目以使用 cz 常规更改日志适配器：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("commitizen init cz-conventional-changelog --save-dev --save-exact\n")])])]),s("p",[t._v("或者，如果您使用的是yarn：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("commitizen init cz-conventional-changelog --yarn --dev --exact\n")])])]),s("p",[t._v("以后，凡是用到"),s("code",[t._v("git commit")]),t._v("命令，一律改为使用"),s("code",[t._v("git cz")]),t._v("。这时，就会出现选项.")]),t._v(" "),s("h2",{attrs:{id:"_2-husky-git-hooks-工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-husky-git-hooks-工具"}},[t._v("#")]),t._v(" 2. "),s("em",[t._v("Husky")]),t._v(" Git hooks 工具")]),t._v(" "),s("p",[t._v("husky 可以防止使用 Git hooks 的一些不好的 commit 或者 push。")]),t._v(" "),s("p",[t._v("安装 husky v4.")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("npm install husky --save-dev\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre-commit"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre-push"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commit-msg"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint -e $HUSKY_GIT_PARAMS"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"..."')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_3-commitlint-commit-message-validate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-commitlint-commit-message-validate"}},[t._v("#")]),t._v(" 3. "),s("em",[t._v("commitlint")]),t._v(" Commit message validate")]),t._v(" "),s("p",[t._v("用于检查项目的 Commit message 是否符合格式。")]),t._v(" "),s("p",[t._v("安装")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g @commitlint/cli @commitlint/config-conventional\n")])])]),s("p",[t._v("配置")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"module.exports = {extends: ['@commitlint/config-conventional']}\"")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" commitlint.config.js\n")])])]),s("p",[t._v("测试")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo: bar'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" commitlint\n")])])]),s("p",[t._v("配置进husky工具")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"husky"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hooks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit-msg"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint -e $HUSKY_GIT_PARAMS"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_4-conventional-changelog-cli-根据-commit-生成日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-conventional-changelog-cli-根据-commit-生成日志"}},[t._v("#")]),t._v(" 4. conventional-changelog-cli 根据 Commit 生成日志")]),t._v(" "),s("p",[t._v("代码")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g conventional-changelog-cli\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" my-project\nconventional-changelog -p angular -i CHANGELOG.md -s\n")])])]),s("blockquote",[s("p",[t._v("参考资料：")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰 Commit message 和 Change log 编写指南"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitizen"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/typicode/husky/tree/master",target:"_blank",rel:"noopener noreferrer"}},[t._v("husky v4"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://commitlint.js.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("conventional-changelog-cli"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);